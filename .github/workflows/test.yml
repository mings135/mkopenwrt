# This is a basic workflow to help you get started with Actions

name: test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # 定时调度
  # schedule:
  #   - cron: "2 0 1,15 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 设置环境变量
env:
  TZ: Asia/Shanghai
  my_device: r2s
  src_directory: lede

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # 创建信息
      - name: Release info
        id: myval
        run: |
          echo $GITHUB_OUTPUT
          echo "release_tag=$(date +"%Y.%m.%d")-${{ env.my_device }}" >> $GITHUB_OUTPUT
          echo "release_name=$(date +"%Y.%m.%d") ${{ env.my_device }} firmware" >> $GITHUB_OUTPUT
          echo "release_path=$(pwd)" >> $GITHUB_OUTPUT
          echo "release_status=ok" >> $GITHUB_OUTPUT

      # 上传固件
      - name: Upload firmware
        uses: softprops/action-gh-release@v1
        if: "steps.myval.outputs.release_status == 'ok' && !cancelled()"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          name: "${{ steps.myval.outputs.release_name }}"
          tag_name: "${{ steps.myval.outputs.release_tag }}"
          body_path: ${{ env.my_device }}.md
          files: ${{ steps.myval.outputs.release_path }}/*.conf

      # 删除历史工作流
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.MY_TOKEN }}
          retain_days: 1
          keep_minimum_runs: 1

      # 删除历史版本
      - name: Delete older Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        if: "!cancelled()"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          keep_latest: 1
          delete_tags: true
