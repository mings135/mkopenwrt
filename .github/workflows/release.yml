name: Lede Build and Release

on:
  schedule:
    - cron: "6 0 * * 5"
  workflow_dispatch:

env:
  SRC_DIR: lede

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - name: x86
            type: 64
            device: generic
          - name: rockchip
            type: armv8
            device: friendlyarm_nanopi-r2s

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Free Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # when set to "true" but frees about 6 GB
          tool-cache: true
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: true

      - name: Install Dependencies
        run: |
          sudo -E apt-get update
          sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libncurses-dev libpython3-dev libreadline-dev \
          libssl-dev libtool llvm lrzsz genisoimage msmtp ninja-build p7zip p7zip-full patch pkgconf python3 \
          python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

      - name: Clone Project
        run: |
          echo "RELEASE_TAG=v$(date +'%Y.%m.%d')" >> $GITHUB_ENV
          echo "TARGET_DIR=bin/targets/${{ matrix.arch.name }}/${{ matrix.arch.type }}" >> $GITHUB_ENV
          git clone --depth=0 https://github.com/coolsnowwolf/lede ${{ env.SRC_DIR }}

      - name: Cache Toolchain
        uses: klever1988/cachewrtbuild@main
        with:
          mixkey: ${{ matrix.arch.name }}_${{ matrix.arch.type }}
          prefix: ${{ env.SRC_DIR }}

      - name: Modify Config
        working-directory: ${{ env.SRC_DIR }}
        run: |
          tmp_file="feeds.conf.default"
          sed -i '/^src-git passwall_pkg/d' ${tmp_file}
          sed -i '/^src-git passwall2/d' ${tmp_file}
          echo 'src-git passwall_pkg https://github.com/xiaorouji/openwrt-passwall-packages.git;main' >> ${tmp_file}
          echo 'src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git;main' >> ${tmp_file}
          tmp_file="package/base-files/files/bin/config_generate"
          sed -i "s/system\.ntp\.enable_server='1'/system.ntp.enable_server='0'/" ${tmp_file}

      - name: Prepare Compile
        working-directory: ${{ env.SRC_DIR }}
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a
          cat > .config <<EOF
          CONFIG_TARGET_${{ matrix.arch.name }}=y
          CONFIG_TARGET_${{ matrix.arch.name }}_${{ matrix.arch.type }}=y
          CONFIG_TARGET_${{ matrix.arch.name }}_${{ matrix.arch.type }}_DEVICE_${{ matrix.arch.device }}=y
          CONFIG_TARGET_KERNEL_PARTSIZE=128
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
          CONFIG_PACKAGE_luci-app-passwall2=y
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-wireguard=y
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-ddns is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          EOF
          make defconfig
          make download -j8

      - name: Compile Firmware
        working-directory: ${{ env.SRC_DIR }}
        run: |
          make V=s -j$(nproc) >/dev/null

      - name: Check File
        working-directory: ${{ env.SRC_DIR }}
        run: |
          ls -l ${{ env.TARGET_DIR }}
          if [ ! -e ${{ env.TARGET_DIR }}/*.img.gz ]; then
            echo "Build failed or output file not found!"
            exit 1
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          name: ${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_TAG }}
          body: "OpenWrt Firmware(x86 and R2S)"
          files: ${{ env.SRC_DIR }}/${{ env.TARGET_DIR }}/*.img.gz

  clean:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Delete Workflow
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.MY_TOKEN }}
          retain_days: 1
          keep_minimum_runs: 9

      - name: Delete Release
        uses: dev-drprasad/delete-older-releases@v0.3.4
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          keep_latest: 9
          delete_tags: true
